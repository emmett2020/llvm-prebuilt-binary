name: Build LLVM on Ubuntu


on:
  pull_request:
    branches: [master]

permissions:
  contents: write
  discussions: write

jobs:
  build-on-amd64:
    name: "build-on-ubuntu-24.04-amd64"
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get Vars
        id: vars
        run: |
          set -euo pipefail

          llvm_latest_version=$(curl -s https://api.github.com/repos/llvm/llvm-project/releases/latest | grep -oP '"tag_name": "\K.*?(?=")')
          llvm_latest_version=${llvm_latest_version#llvmorg-}
          echo "llvm latest version: $llvm_latest_version"
          echo "llvm_version=${llvm_latest_version}" >> "${GITHUB_OUTPUT}"

          current_version="v${llvm_version}-amd"
          echo "current version: $current_version"

          if git rev-parse "${current_version}" >/dev/null 2>&1; then
            echo "needs build false"
            echo "needs_build=false" >> "${GITHUB_OUTPUT}"
          else
            echo "needs build true"
            echo "needs_build=true" >> "${GITHUB_OUTPUT}"
          fi
 
      - name: Run Build Script
        if: ${{ steps.vars.outputs.needs_build == 'true' }}
        run: |
          set -euo pipefail
          bash build_clangd.sh  "${{ steps.vars.outputs.llvm_version }}" "`pwd`/llvm/"
          major=$(echo "${{ steps.vars.outputs.llvm_version }}" | cut -d '.' -f 1)
          tar -cf llvm-amd.tar.gz llvm/bin/clangd llvm/bin/clang-${major} llvm/bin/clang llvm/lib/clang/                                                                           ─╯

      - name: Release Artifacts to Github Release Page
        if: ${{ steps.vars.outputs.needs_build == 'true' }}
        uses: softprops/action-gh-release@v2
        with:
          fail_on_unmatched_files: true
          tag_name: v${{ steps.vars.outputs.llvm_version }}-amd
          files: |
            llvm-amd.tar.gz
  build-on-arm64:
    name: "build-on-ubuntu-24.04-arm64"
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get Vars
        id: vars
        run: |
          set -euo pipefail

          llvm_latest_version=$(curl -s https://api.github.com/repos/llvm/llvm-project/releases/latest | grep -oP '"tag_name": "\K.*?(?=")')
          llvm_latest_version=${llvm_latest_version#llvmorg-}
          echo "llvm latest version: $llvm_latest_version"
          echo "llvm_version=${llvm_latest_version}" >> "${GITHUB_OUTPUT}"

          current_version="v${llvm_version}-amd"
          echo "current version: $current_version"

          if git rev-parse "${current_version}" >/dev/null 2>&1; then
            echo "needs build false"
            echo "needs_build=false" >> "${GITHUB_OUTPUT}"
          else
            echo "needs build true"
            echo "needs_build=true" >> "${GITHUB_OUTPUT}"
          fi
 
      - name: Run Build Script
        if: ${{ steps.vars.outputs.needs_build == 'true' }}
        run: |
          set -euo pipefail
          bash build_clangd.sh  "${{ steps.vars.outputs.llvm_version }}" "`pwd`/llvm/"
          major=$(echo "${{ steps.vars.outputs.llvm_version }}" | cut -d '.' -f 1)
          tar -cf llvm-arm.tar.gz llvm/bin/clangd llvm/bin/clang-${major} llvm/bin/clang llvm/lib/clang/                                                                           ─╯

      - name: Release Artifacts to Github Release Page
        if: ${{ steps.vars.outputs.needs_build == 'true' }}
        uses: softprops/action-gh-release@v2
        with:
          fail_on_unmatched_files: true
          tag_name: v${{ steps.vars.outputs.llvm_version }}-arm
          files: |
            llvm-arm.tar.gz



